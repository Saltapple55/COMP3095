#keycloak free and open source
services:
  #run text file that instantiates images
  keycloak:
    container_name: keycloak
    hostname: keycloak
    image: quay.io/keycloak/keycloak:24.0.1
    #realms are configurations, backend client,
    #start in dev mode, import realms - 1 for many backend solutions
    command: ["start-dev", "--import-realm"]
    environment:
      DB_VENDOR: postgres
      #docker allocates ids,  - should match
      DB_ADDR: postgres-keycloak
      #db has own login, so does keycloak
      DB_DATABASE: admin
      DB_PASSWORD: password
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: password
      ROOT_LOGLEVEL: DEBUG
      JBOSS_LOG_MANAGER_ROOT_LOGGER: DEBUG, stdout, FILE
    ports:
      - "8081:8080"
    volumes:
       #configuration folder- if want to export
      #map from host machine to container -
      - ./realms/:/opt/keycloak/data/import
    depends_on:
      - postgres-keycloak
    networks:
      - spring


  postgres-keycloak:
    image: postgres
    ports:
      - "5431:5432" #default numbers
    container_name: postgres-keycloak
    environment:
      - POSTGRES_DB=keycloak
      - POSTGRES_USER=admin
      - POSTGRES_PASSWORD=password
      - PGDATA=/data/postgres
    volumes:
      #where container is in db
      - ./data/postgres/keycloak:/var/lib/postgresql/data
    networks:
      - spring


    #docker-compose -p postgres-inventory-single -f docker-compose-multiple.yml up -d
    #no network bc local
 #GUI
#  pgadmin:
#    image: dpage/pgadmin4
#    ports:
#      - "8888:80"
#    container_name: pgadmin-inventory
#    environment:
#      - PGADMIN_DEFAULT_EMAIL=user@domain.ca
#      - PGADMIN_DEFAULT_PASSWORD=password
#    networks:
#      - spring

networks:
  spring:
    driver: bridge