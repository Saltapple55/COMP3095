spring.application.name=order-service
order-service.version=v1.0

server.port=8082
#postgres local config
spring.datasource.url=jdbc:postgresql://localhost:5433/order-service

#Postgres Configuration
spring.datasource.username=admin
spring.datasource.password=password
spring.datasource.driver-class-name=org.postgresql.Driver
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect

#hibernate creates actual db - and columns.tables
#none bc complete config is in flyway

spring.jpa.hibernate.ddl-auto=none

springdoc.swagger-ui.path=/swagger-ui

springdoc.api-docs.path=/api-docs


management.health.circuitbreakers.enabled=true
management.endpoints.web.exposure.include=*
management.endpoint.health.show-details=always

resilience4j.circuitbreaker.instances.inventory.registerHealthIndicator=true
resilience4j.circuitbreaker.instances.inventory.event-consumer-buffer-size=10

resilience4j.circuitbreaker.instances.inventory.slidingWindowType=COUNT_BASED
resilience4j.circuitbreaker.instances.inventory.slidingWindowSize=10

resilience4j.circuitbreaker.instances.inventory.failureRateThreshold=50

resilience4j.circuitbreaker.instances.inventory.waitDurationInOpenState=5s
#before it switches back to closed
resilience4j.circuitbreaker.instances.inventory.permittedNumberOfCallsInHalfOpenState=3
resilience4j.circuitbreaker.instances.inventory.automaticTransitionFromOpenToHalfOpenEnabled=true
#calls a timeout after 3 seconds
resilience4j.timelimiter.instances.inventory.timeout-duration=3s
#number of calls before calculate error rate
resilience4j.circuitbreaker.instances.inventory.minimum-number-of-calls=5
#max num of attempts, initial inclusive
resilience4j.retry.instances.inventory.max-attempts=3
#duration between retry attempts
resilience4j.retry.instances.inventory.wait-duration=2s

#kafka properties - stores event as json, then deserialize to use again
spring.kafka.bootstrap-servers=localhost:9092
spring.kafka.template.default-topic=order-placed
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
#serializer class for serializing kafka
#spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer
#to orderplaced event-packageing file path
#spring.kafka.producer.properties.spring.json.type.mapping=event:ca.gbc.orderservice.event.OrderPlacedEvent

spring.kafka.producer.value-serializer==io.confluent.kafka.serializers.kafkaAvroSerializer
spring.kafka.producer.properties.schema.registry.url=http://127.0.0.1:8087


